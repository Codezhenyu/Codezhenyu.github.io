<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo+github博客功能优化</title>
      <link href="/2020/06/22/%E5%8D%9A%E5%AE%A2%E5%8A%9F%E8%83%BD%E7%9A%84%E4%BC%98%E5%8C%96/"/>
      <url>/2020/06/22/%E5%8D%9A%E5%AE%A2%E5%8A%9F%E8%83%BD%E7%9A%84%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo博客的功能优化（6-22）"><a href="#hexo博客的功能优化（6-22）" class="headerlink" title="hexo博客的功能优化（6.22）"></a>hexo博客的功能优化（6.22）</h1><p>花费一天的时间，优化了博客中可能出现的页面的功能，如404，about的页面的非渲染。</p><a id="more"></a><p>其次再次搭建了导航网页，经过很长时间的CDN的调试，图片还是无法正常显示，应该是main.js中的js函数调用的仍然是本地的图片吧，有时间再继续慢慢研究了。总之现在博客的功能趋于完善，加油更新博客内容咯~~</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C用scanf连续输入字符型数据常见问题</title>
      <link href="/2020/06/15/c%20%E8%AF%AD%E8%A8%80%E7%94%A8%20scanf%20%E8%BF%9E%E7%BB%AD%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
      <url>/2020/06/15/c%20%E8%AF%AD%E8%A8%80%E7%94%A8%20scanf%20%E8%BF%9E%E7%BB%AD%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="C-用-scanf-连续输入字符型数据常见问题"><a href="#C-用-scanf-连续输入字符型数据常见问题" class="headerlink" title="C 用 scanf 连续输入字符型数据常见问题"></a>C 用 scanf 连续输入字符型数据常见问题</h1><p>在设计数据结构实习过程中遇到，连续输入字符的问题。</p><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> i,j;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"put in i:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"i=%c\n"</span>,i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"put in j:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;j);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"j=%c\n"</span>,j);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很简单的一个程序，看起来应该没有问题，运行结果理论上应该像这样：<br><img src="https://img-blog.csdn.net/20170423181627802?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2luYXRfMzgwNTI5OTk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>但是实际上是这样：<br><img src="https://img-blog.csdn.net/20170423181735879?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2luYXRfMzgwNTI5OTk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>其中的原因就在于 scanf 是从标准缓冲区中读取输入的字符的，所以想上面那样写的时候字符型变量 j 接收的就是输入 i 之后输入的那个回车键。</p><p>解决方法：   </p><ol><li>用 fflush(stdin); 语句来清空缓冲区<br>代码：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> i,j;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"put in i:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"i=%c\n"</span>,i);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"put in j:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;j);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"j=%c\n"</span>,j);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就可以得到想要的结果了。</p><ol start="2"><li>在 scanf(“%c”,&amp;j); 中的 %c 之前加个空格 -&gt;scanf(” %c”,&amp;j); 这样这个空格就可以抵消那个回车。</li></ol><p>实际上这种情况通常会出现在定义了一个字符型数据（eg.char flag;）然后在一个 for 或者 while 循环里面会多次输入这个 flag<br>eg.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxsize 10</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> flag;</span><br><span class="line">    <span class="keyword">int</span> i,num[maxsize];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入数字:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"是否继续输入,如果是就输入y,反之输入n:\n"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;flag);</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="string">'n'</span>)</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序是会出现这样的情况：<br><img src="https://img-blog.csdn.net/20170423183527232?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2luYXRfMzgwNTI5OTk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>此时就可以使用上述两个方法解决。</p><p>例外，在使用 getchar() 输入字符的时候也会出现上述情况，此时除了可以用上述中方法一解决之外，对应上述的方法二可以可以改为：写两个 getchar();<br>eg.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> i,j;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"put in i:"</span>);</span><br><span class="line">    i=getchar();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"i=%c\n"</span>,i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"put in j:"</span>);</span><br><span class="line">    j=getchar();</span><br><span class="line">    j=getchar();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"j=%c\n"</span>,j);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个方法的原理与上述方法二是一样的。</p>]]></content>
      
      
      <categories>
          
          <category> 编程困惑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>驾考科目三要点(已过)</title>
      <link href="/2020/06/10/%E7%A7%91%E4%B8%89%E8%A6%81%E7%82%B9/"/>
      <url>/2020/06/10/%E7%A7%91%E4%B8%89%E8%A6%81%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>​    科目二10号下午过关，考试过程备受煎熬！！</p><p>​    现在认真准备18号的科三考试，暑假争取拿驾照！！！</p><div class="note red"><p>18号科目三已过关，29号科四，6月底拿驾照！</p></div><a id="more"></a><h1 id="科三灯光口诀"><a href="#科三灯光口诀" class="headerlink" title="科三灯光口诀"></a>科三灯光口诀</h1> <div class="note success"><p>直行跟车有路灯，全部使用近光灯。 <br/> 照明不良没路灯，前照变成远光灯。<br/> 只有通过和超越，交替使用远近光。<br/> 路边临停有故障，示廓加上双闪灯。 <br/></p></div><h2 id="科三注意点"><a href="#科三注意点" class="headerlink" title="科三注意点"></a>科三注意点</h2><ol><li><p>起步时候注意按喇叭，同时离合器要缓慢抬动，走出几米之后，再慢慢完全松掉离合器。</p></li><li><p>在变更车道，超车，打开转向灯后，3秒后点一脚油门，5秒钟之后，观察后视镜，变更车道，记得关闭转向灯，重打轻回！</p></li><li><p>路口转弯，要在通过人行横道后再端方向盘，并且在实线前要点2脚以上的刹车。 轻点。</p></li><li><p>紧急刹车，一脚踩死离合器，慢慢踩刹车，立即换成一档起步。</p></li><li><p>转弯都用二挡，听到语音播报，先打灯，后换挡，点刹两次后，观察后视镜，打死方向盘。</p></li><li><p>靠边停车，注意要先打灯，换成二挡，点刹两次，慢慢回正方向盘，踩死离合器和刹车，对准小白点，停车。 拉手刹，置空档，观察后视镜，按步骤离开驾驶座位。</p></li><li><p>三档要时刻保持25码的速度，记得多瞥一眼。尤其是变更车道，记得稍微带一点油门。</p></li><li><p>百米加减档，掉头后，迅速升到25码换成三档，立即加速到35码，等待语音播报，换成四档，数3秒后换成三档，同时注意保持25码速度行驶。3-4秒后换成二挡。 行驶一段距离，加速换成三档。<br> 直行通过路口，近光灯。</p></li><li><p>遇到任何状况，超车和变更车道有问题，包括档位不知道在几档都要立即停车 停车立刻挂一档  重新起步，记得打方向灯。</p></li><li><p>在变更车道，超车前，1234加油门 5秒移动方向盘。<br> 车正后再打方向灯。</p></li><li><p>通过学校区域，公交车站牌，时速保持20-25 一定要小25码 </p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 考证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 驾考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一元多项式</title>
      <link href="/2020/06/08/%E4%B8%80%E5%85%83%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
      <url>/2020/06/08/%E4%B8%80%E5%85%83%E5%A4%9A%E9%A1%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p><strong>一元多项式计算（C 语言）</strong></p><p>题目：</p><ol><li>一元多项式计算</li></ol><p><strong>功能要求</strong>：</p><p>（1）能够按照指数降序排列建立并输出多项式；</p><p>（2）能够完成两个多项式的相加、相减，并将结果输出；</p><p>程序：</p><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NULL 0</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">term</span> &#123;</span></span><br><span class="line"><span class="keyword">float</span> base;  <span class="comment">//底数</span></span><br><span class="line"><span class="keyword">int</span> expn;  <span class="comment">//指数</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">term</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;term, *LinkList;<span class="comment">//term为一个新类型（是一个结构体），LinkList为指向这样的结构体的指针</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> LinkList polynomial;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//若有序链表L中存在与项t的指数相等的元素，则指针q指向L中第一个指数为t-&gt;expn的节点的位置，</span></span><br><span class="line"><span class="comment">//否则q指向第一个指数满足与t-&gt;expn相比&gt;0的节点的前驱位置</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">locateElem</span><span class="params">(LinkList L, LinkList t, LinkList &amp;q)</span> </span>&#123;</span><br><span class="line">LinkList p1 = L-&gt;next;</span><br><span class="line">LinkList p2 = L;<span class="comment">//p2总指向p1的前驱</span></span><br><span class="line"><span class="keyword">while</span> (p1) &#123;</span><br><span class="line"><span class="keyword">if</span> (t-&gt;expn &lt; p1-&gt;expn) &#123;</span><br><span class="line">p1 = p1-&gt;next;</span><br><span class="line">p2 = p2-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (t-&gt;expn == p1-&gt;expn) &#123;</span><br><span class="line">q = p1;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;<span class="comment">//p1-&gt;expn &gt; t-&gt;expn,因为L是有序表，所以如果程序走到了这一步，说明没找到与项t的指数相等的节点元素</span></span><br><span class="line">   <span class="comment">//则返回q的前驱结点</span></span><br><span class="line">q = p2;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!p1) &#123;<span class="comment">//t-&gt;expn比当前列表所有元素的指数都大，则上面的while循环会因为p2到达了尾节点，p1=NULL而跳出</span></span><br><span class="line">q = p2;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">// 1. 直接选择排序   ------直接交换数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ListSort_1</span><span class="params">(LinkList head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList p = <span class="literal">NULL</span>;</span><br><span class="line">LinkList q = <span class="literal">NULL</span>;</span><br><span class="line">LinkList t = <span class="literal">NULL</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span> || (head)-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">return</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> </span><br><span class="line">     <span class="keyword">for</span> (p = head; p != <span class="literal">NULL</span>; p = p-&gt;next)</span><br><span class="line">     &#123;</span><br><span class="line">         t = p;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">for</span> (q = p-&gt;next; q != <span class="literal">NULL</span>; q = q-&gt;next)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">if</span> (q-&gt;expn &gt; t-&gt;expn)</span><br><span class="line">            &#123;</span><br><span class="line">                 t = q;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (t != p)</span><br><span class="line">         &#123;</span><br><span class="line"> LinkList tmp = <span class="literal">NULL</span>;</span><br><span class="line"> tmp = p;</span><br><span class="line"> p = t;</span><br><span class="line"> t = tmp;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//输入m项的系数和指数，建立表示一元多项式的带有头节点的有序链表P</span></span><br><span class="line"><span class="comment">//利用尾插法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createPolyn</span><span class="params">(polynomial &amp;P, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line"><span class="comment">//先建立一个带有头节点的空链表，即初始化</span></span><br><span class="line">P = (polynomial)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">P-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">LinkList r = P;<span class="comment">//r指针总是指向当前线性表的最后一个元素，即尾元素</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入系数,指数,如项2x^5则输入(2,5):\n"</span>);<span class="comment">//不必按升幂输入</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;<span class="comment">//依次输入m个非零项</span></span><br><span class="line">LinkList t = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">t-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">LinkList q;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f,%d"</span>, &amp;t-&gt;base, &amp;t-&gt;expn);</span><br><span class="line"><span class="keyword">char</span> c = getchar();</span><br><span class="line"><span class="keyword">if</span> (!locateElem(P, t, q)) &#123;<span class="comment">//当前链表中不存在该指数项，则插入，此时q为链表中第一个指数&gt;t-&gt;expn的节点的前驱结点</span></span><br><span class="line">t-&gt;next = q-&gt;next;</span><br><span class="line">q-&gt;next = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;<span class="comment">//当前列表中已经存在有节点元素的指数与本次输入的项的指数相同，所以本次输入无效，应重新输入</span></span><br><span class="line">i--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ListSort_1(P);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//打印多项式链表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printPolynomial</span><span class="params">(polynomial P)</span> </span>&#123;</span><br><span class="line">LinkList q = P-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"打印多项式的线性表：["</span>);</span><br><span class="line"><span class="keyword">while</span> (q) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"(%.2f,%d)  "</span>, q-&gt;base, q-&gt;expn);</span><br><span class="line">q = q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"]\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">(polynomial L)</span> <span class="comment">//打印多项式</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">polynomial p;</span><br><span class="line">p = L-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.0fx^(%d)"</span>, p-&gt;base, p-&gt;expn);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;base &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"+%.0fx^(%d)"</span>, p-&gt;base, p-&gt;expn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.0fx^(%d)"</span>, p-&gt;base, p-&gt;expn);</span><br><span class="line">&#125;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(LinkList qa, LinkList qb)</span> </span>&#123;<span class="comment">//比较项的指数大小</span></span><br><span class="line"><span class="keyword">if</span> (qa-&gt;expn &gt; qb-&gt;expn)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (qa-&gt;expn == qb-&gt;expn)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addPolyn</span><span class="params">(LinkList La, LinkList Lb, LinkList &amp;Lc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList pa, pb, pc;</span><br><span class="line">pc = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">Lc = pc;</span><br><span class="line">pa = La-&gt;next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> x;</span><br><span class="line">pb = Lb-&gt;next;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> (pb) &#123;</span><br><span class="line"><span class="keyword">if</span> (!pa) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (pa-&gt;expn == pb-&gt;expn) <span class="comment">//指数相同</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//EXPN=pa-&gt;expn;</span></span><br><span class="line">x = pa-&gt;base + pb-&gt;base;</span><br><span class="line"><span class="keyword">if</span> (x)</span><br><span class="line">&#123;</span><br><span class="line">pc-&gt;next = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">pc = pc-&gt;next;</span><br><span class="line">pc-&gt;base = x;</span><br><span class="line">pc-&gt;expn = pa-&gt;expn;</span><br><span class="line">&#125;</span><br><span class="line">pa = pa-&gt;next;</span><br><span class="line">pb = pb-&gt;next;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (pa-&gt;expn &gt; pb-&gt;expn)</span><br><span class="line">&#123;</span><br><span class="line">pc-&gt;next = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">pc = pc-&gt;next;</span><br><span class="line">pc-&gt;base = pa-&gt;base;</span><br><span class="line">pc-&gt;expn = pa-&gt;expn;</span><br><span class="line">pa = pa-&gt;next;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (pa-&gt;expn &lt; pb-&gt;expn)</span><br><span class="line">&#123;</span><br><span class="line">pc-&gt;next = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">pc = pc-&gt;next;</span><br><span class="line">pc-&gt;base = pb-&gt;base;</span><br><span class="line">pc-&gt;expn = pb-&gt;expn;</span><br><span class="line">pb = pb-&gt;next;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">pc-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">subPolyn</span><span class="params">(LinkList La, LinkList Lb, LinkList &amp;Lc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList pa, pb, pc;</span><br><span class="line">pc = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">Lc = pc;</span><br><span class="line">pa = La-&gt;next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> x;</span><br><span class="line">pb = Lb-&gt;next;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> (pb) &#123;</span><br><span class="line"><span class="keyword">if</span> (!pa) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (pa-&gt;expn == pb-&gt;expn) <span class="comment">//指数相同</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//EXPN=pa-&gt;expn;</span></span><br><span class="line">x = pa-&gt;base - pb-&gt;base;</span><br><span class="line"><span class="keyword">if</span> (x)</span><br><span class="line">&#123;</span><br><span class="line">pc-&gt;next = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">pc = pc-&gt;next;</span><br><span class="line">pc-&gt;base = x;</span><br><span class="line">pc-&gt;expn = pa-&gt;expn;</span><br><span class="line">&#125;</span><br><span class="line">pa = pa-&gt;next;</span><br><span class="line">pb = pb-&gt;next;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (pa-&gt;expn &gt; pb-&gt;expn)</span><br><span class="line">&#123;</span><br><span class="line">pc-&gt;next = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">pc = pc-&gt;next;</span><br><span class="line">pc-&gt;base = pa-&gt;base;</span><br><span class="line">pc-&gt;expn = pa-&gt;expn;</span><br><span class="line">pa = pa-&gt;next;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (pa-&gt;expn &lt; pb-&gt;expn)</span><br><span class="line">&#123;</span><br><span class="line">pc-&gt;next = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">pc = pc-&gt;next;</span><br><span class="line">pc-&gt;base = pb-&gt;base;</span><br><span class="line">pc-&gt;expn = pb-&gt;expn;</span><br><span class="line">pb = pb-&gt;next;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">pc-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">polynomial Pa,Pb,Pc,Pd;</span><br><span class="line">createPolyn(Pa, <span class="number">5</span>);<span class="comment">//初始化并创建多项式链表Pa</span></span><br><span class="line">createPolyn(Pb, <span class="number">3</span>);<span class="comment">//初始化并创建多项式链表Pb</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">display</span>(Pa);</span><br><span class="line"><span class="built_in">display</span>(Pb);</span><br><span class="line"> </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"执行多项式相加以后\n"</span>);</span><br><span class="line">addPolyn(Pa, Pb, Pc);</span><br><span class="line"><span class="built_in">display</span>(Pc);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"执行多项式相减以后\n"</span>);</span><br><span class="line">subPolyn(Pa, Pb, Pd);</span><br><span class="line"><span class="built_in">display</span>(Pd);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考资源：</p><p><a href="https://blog.csdn.net/qq_37623612/article/details/80312121" target="_blank" rel="noopener">https://blog.csdn.net/qq_37623612/article/details/80312121</a>   </p><p><a href="https://blog.csdn.net/c0ldHEart/article/details/83412436" target="_blank" rel="noopener">https://blog.csdn.net/c0ldHEart/article/details/83412436</a></p><p><a href="https://blog.csdn.net/u010366748/article/details/50636748" target="_blank" rel="noopener">https://blog.csdn.net/u010366748/article/details/50636748</a></p>]]></content>
      
      
      <categories>
          
          <category> 实习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>纸牌游戏</title>
      <link href="/2020/06/08/%E7%BA%B8%E7%89%8C%E6%B8%B8%E6%88%8F/"/>
      <url>/2020/06/08/%E7%BA%B8%E7%89%8C%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<p><strong>[题目]</strong>：编号为1-52张牌，正面向上，从第2张开始，以2为基数，是2的倍数的牌翻一次，直到最后一张牌；然后，从第3张开始，以3为基数，是3的倍数的牌翻一次，直到最后一张牌；然后从第4张开始，以4为基数，是4的倍数的牌翻一次，直到最后一张牌；……直到以52为基数的牌翻过，这时正面向上的牌有哪些？请设计算法编写程序输出最终正面向上的纸牌的编号。</p><a id="more"></a><p><strong>[代码设计]：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 52</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">int</span> i,j;</span><br><span class="line"> <span class="keyword">int</span> card[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"> <span class="keyword">for</span> (i = <span class="number">2</span>;i &lt;= N;i++)</span><br><span class="line">  <span class="keyword">for</span> (j = <span class="number">2</span>;j &lt;= N;j++)</span><br><span class="line">   <span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span> (card[i<span class="number">-1</span>])</span><br><span class="line">     card[i<span class="number">-1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> card[i<span class="number">-1</span>] = <span class="number">1</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"最后正面向上的扑克牌为:\n"</span>);</span><br><span class="line"> <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">  <span class="keyword">if</span> (card[i]==<span class="number">0</span>)</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"第%d张\n"</span>,i + <span class="number">1</span>);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 实习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构实习计划表</title>
      <link href="/2020/06/08/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E4%B9%A0%E5%86%85%E5%AE%B9/"/>
      <url>/2020/06/08/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E4%B9%A0%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="数据结构实习计划表："><a href="#数据结构实习计划表：" class="headerlink" title="数据结构实习计划表："></a>数据结构实习计划表：</h1><a id="more"></a><p><img src="https://s1.ax1x.com/2020/06/08/thCIUK.jpg" alt="thCIUK.jpg"><br><img src="https://s1.ax1x.com/2020/06/08/thC5E6.jpg" alt="thC5E6.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 实习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科目二考试全过程（转）</title>
      <link href="/2020/06/04/%E7%A7%91%E7%9B%AE%E4%BA%8C%E8%80%83%E8%AF%95%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AF%A6%E8%A7%A3/"/>
      <url>/2020/06/04/%E7%A7%91%E7%9B%AE%E4%BA%8C%E8%80%83%E8%AF%95%E5%85%A8%E6%B5%81%E7%A8%8B%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="“三字诀”：慢、稳、准"><a href="#“三字诀”：慢、稳、准" class="headerlink" title="“三字诀”：慢、稳、准"></a>“三字诀”：慢、稳、准</h1><p><strong>慢</strong>：速度要慢，慢是完成一系列操作的基础，只有慢一点才能给你足够的反应时间。</p><p><strong>稳</strong>：心态平和，不紧张，不慌乱；操控要稳。</p><p><strong>准</strong>：看准点位，把握好火候，方向盘要打准。</p><p><img src="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=294259652,3465085128&fm=173&app=25&f=JPEG?w=640&h=405&s=B84ABE56D38F414B02E4777B0300107E" alt=""></p><a id="more"></a><h2 id="一、上车准备（按顺序依次进行）"><a href="#一、上车准备（按顺序依次进行）" class="headerlink" title="一、上车准备（按顺序依次进行）"></a>一、上车准备（按顺序依次进行）</h2><ol><li><p>上车检查。方向盘和车轮要回正。方向盘始终在最上面卡紧。</p></li><li><p>调整座椅。靠背最大幅度往前靠至 90 度；左脚伸至离合器下侧，膝盖弯曲略大于 90 度，便于轻松用力。</p></li><li><p>调后视镜。左侧要看到左后轮接触地面；右侧看右前门把手在镜子中间。</p></li><li><p>系安全带。不要忘了或者插到副驾驶座，否则考试直接挂。按左手大拇指指纹。</p></li><li><p>打左转向灯。若忘了，就挂了。</p></li><li><p>车辆起步。踩离合、踩刹车，挂一档、松刹车、放手刹，轻抬离合，车辆启动。</p></li></ol><h2 id="二、牵线"><a href="#二、牵线" class="headerlink" title="二、牵线"></a>二、牵线</h2><p>倒库牵线（若在 2 车道，在此基础上还要多牵 2 步）</p><p>点位 1：当肩膀与黄线平行时，方向盘向左一圈半 “打死”，车辆开始左转，目光正视前方，修正方向盘，直到方向盘左边最小铆钉正对着前方第三条黄色虚线的左边缘，左后视镜的中间部分压住左侧黄线为止。注意：中途不允许停车，否则直接挂科。</p><p>点位 2：车辆保持直行，当肩膀与地面黄色虚线平行时，离合、刹车 “双踩”，然后准备右倒库</p><h2 id="三、倒车入库"><a href="#三、倒车入库" class="headerlink" title="三、倒车入库"></a>三、倒车入库</h2><ol><li>右倒库（4 个点位）</li></ol><p>点位 1：车辆开始后退，用余光观察左后视镜，当左后视镜与车身相交的夹角点即将抵达黄虚线上沿约 3～4 厘米处时，迅速向右一圈半打死，车辆开始向右侧后退</p><p>点位 2：低头弯腰，看左后视镜，当看见左侧车尾与左后方黄线直角之间的间距约 5 厘米左右时（实际有一咔长），方向盘迅速向左回半圈，车辆继续后退，开始入库</p><p>点位 3：继续低头弯腰，观察左后视镜，当看见车辆左侧车尾与左侧黄线平行时，方向盘迅速向左回一圈，此时方向盘已正，车辆后半部分已入库</p><p>点位 4：车辆继续后退，身体坐正，头朝前，用眼睛余光观察左后视镜与车身相交的夹角，当夹角的点落在左侧前方黄虚线的中间偏下一点时，“双踩死”，准备开始向左出库</p><ol start="2"><li>左倒库（8 个点位）</li></ol><p>起步准备：挂前进档一档，松刹车，缓慢抬离合，车辆开始向前直行，车头开始出库</p><p>点位 1：此点位与右倒库一致，特别注意方向盘不要打反。即：观察左后视镜，当看见左后轮越过黄色直角时，方向盘迅速向左一圈半打死</p><p>点位 2：车辆开始偏左前行，身体坐正，头看前方，用眼睛余光观察左后视镜的左边沿与左前方第二条黄虚线的右边沿基本重合时，方向盘向右回半圈</p><p>点位 3：车辆继续偏左缓慢行驶，头偏向左侧观察，当整个左车窗玻璃缝与左侧黄线平行时，方向盘迅速向右回一圈，此时方向盘已回正</p><p>点位 4：车辆继续前行，用眼镜余光观察，当自己的肩膀越过黄虚线时，“双踩死”，挂后档，松刹车，缓抬离合</p><p>点位 5：车辆开始后退，继续用余光观察左后视镜，当左后视镜与车身相交的夹角点即将抵达黄虚线上沿约 5～6 厘米处时，迅速向左一圈半打死，车辆开始向左侧后退</p><p>点位 6：低头弯腰，看右后视镜，当看见右侧车尾与右后方黄线直角之间的间距约 5 厘米左右时（实际有一咔长），迅速向右回半圈，车辆继续后退，开始入库</p><p>点位 7：继续低头弯腰，观察右后视镜，当看见车辆右侧车身与右侧黄线平行时，方向盘迅速向右回一圈，此时方向盘已正，车辆后半部分已入库</p><p>点位 8：车辆继续后退，身体坐正，头朝前，用眼睛余光观察左后视镜与车身相交的夹角，当夹角的点落在左侧前方黄虚线的中间偏下一点时，“双踩死”，准备开始向右出库</p><p><img src="https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1295892906,199515319&fm=173&app=25&f=JPEG?w=640&h=853&s=169417C95C1A27CE1A948010030070D3" alt="">我倒了个标库</p><h2 id="四、侧方停车（7-个点位）"><a href="#四、侧方停车（7-个点位）" class="headerlink" title="四、侧方停车（7 个点位）"></a>四、侧方停车（7 个点位）</h2><p>点位 1：车辆出库，观察左后轮越过黄色直角时，方向盘迅速向右打死</p><p>点位 2：当车辆右雨刮器上的 “三角背” 凸点略高于右侧墙砖上沿时，方向盘向左微调，直到左雨刮器中间缺口与黄线内侧相切，此时方向盘应该是正的。适当修正方向盘，让车辆沿着右侧黄线保持直线行驶。此时车身与右侧黄线不能小于 15 厘米大于 50 厘米</p><p>点位 3：观察右后视镜，当右侧黄色直角位于右后视镜中 2/3 处（右上角）时，“双踩”（此时车尾距离直角应该在 1 米以上，如果距离过短，与黄线平行，则直接挂科），挂倒挡，松刹车，轻抬离合，车辆开始后退</p><p>点位 4：当右后视镜中的直角接近消失时，方向盘向右打死，低头弯腰，看左后侧墙砖，到第四块砖露出 10-15 厘米左右时，方向盘迅速向左回正，车辆开始进库</p><p>点位 5：观察左后视镜，当看到左后轮即将压左侧黄虚线时，方向盘迅速向左一圈半打死，车辆继续后退</p><p>点位 6：观察右后视镜，当右车身与右侧黄线平行时，“双踩死”（注意两个不：一是不要回正方向盘；二是 “双踩” 时不要松脚），打左转向灯（勿忘），方向盘保持原样，挂前进档一档，3 秒后（倒数 5 个数），松刹车，缓抬离合，车辆前行</p><p>点位 7：出库后，当右刮雨器上的 “三角背” 凸点过右侧墙砖时，方向盘向右回一圈半；当左雨刮器上的 “三角背” 凸点与地面左侧黄线重合后，方向盘向右打一圈，车正后方向盘回正，车辆直行。侧方停车操作完成</p><p>后续操作：当车辆方向盘越过左侧花坛时，方向盘左打一圈，然后调整方向盘准备切入曲线弯道入口</p><h2 id="五、曲线行驶（8-个点位）"><a href="#五、曲线行驶（8-个点位）" class="headerlink" title="五、曲线行驶（8 个点位）"></a>五、曲线行驶（8 个点位）</h2><p>点位 1：当左刮雨器上的左二铆钉正对路中间，右三铆钉与右黄线重合时，车辆可以进入车道</p><p>点位 2：当车辆引擎盖上的 “左龙骨” 完全盖住右侧黄线时，方向盘向左打一圈（360 度）</p><p>点位 3：当 “左龙骨” 到右侧地砖中间时，方向盘向左打 90 度（此时方向盘上的雪铁龙车标应该朝左，呈 90 度垂直，左手在 6 点方向，右手在 12 点方向）</p><p>点位 4：车辆向左行驶，当 “左龙骨” 的左侧距地面左侧黄线约 10 厘米处时，方向盘迅速向右回正（360 度 + 90 度）</p><p>点位 5：当左刮雨器上的右二铆钉与左侧黄线重合时，方向盘向右打一圈（360 度）</p><p>点位 6：当左刮雨器上的右二铆钉与左侧地面墙角重合时，方向盘向右打 90 度</p><p>点位 7：当 “右龙骨” 与右侧墙砖相交时，方向盘迅速回正（360 度 + 90 度）</p><p>点位 8：调整方向盘，让左雨刮器中间缺口切右侧黄线左边线前行，车正后打左转向灯，车辆向前行驶</p><p><img src="https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=3035368462,782056716&fm=173&app=25&f=JPEG?w=640&h=480&s=F19E1FD092EB5F0F7A09F8E00300A0B3" alt=""></p><h2 id="六、直角转弯（3-个点位）"><a href="#六、直角转弯（3-个点位）" class="headerlink" title="六、直角转弯（3 个点位）"></a>六、直角转弯（3 个点位）</h2><p>点位 1：头向左微侧，注意看左侧后视镜与车身的夹角，此时如果看见左侧直角时关左转向灯</p><p>点位 2：看引擎盖与前方墙角重合时，方向盘左打死，左后车轮越过左侧直角时间距保持 5 厘米左右</p><p>点位 3：车辆向左转弯，观察左侧车窗玻璃缝，当玻璃缝与左侧黄线呈 “倒八字形” 时，方向盘回正，车辆前行，出车道</p><p><img src="https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=2529780063,477849203&fm=173&app=25&f=JPEG?w=600&h=717&s=979178216A46534D169019E40300E0B1" alt="">坡道定点停车起步</p><h2 id="七、坡道定点停车"><a href="#七、坡道定点停车" class="headerlink" title="七、坡道定点停车"></a>七、坡道定点停车</h2><p>进入车道：上坡前有三个点位用来观察车身：1. 看车辆 “左龙骨” 的是否正对着坡道 “黄虚横线” 的第二、三条之间的黑线（通俗地说就是与别人走过的轮胎印重合）；2. 看左刮雨器上的左一小铆钉是否正对着第三条虚线左边缘靠右 10 厘米；3. 看左刮雨器中心缺口是否距离右黄线内侧约一指宽）。</p><p>开始上坡：上坡之前要提前抬离合，上抬约 3 厘米左右（比平路上要多抬一点），当车盖翘起时，注意稳定离合（如果此车很慢，似走非走，可适当抬高离合，但幅度不宜过大），上坡过程中可以微修方向，但幅度要小，且修完之后方向要迅速回正。※引擎盖顶端从右至左 1/3 处，轧右侧黄线，车身与右边线距离即为 30 公分左右。</p><p>定点停车：车辆向前缓慢行驶，当车引擎盖盖过所有黄线后，把脚放在刹车踏板上做好刹车准备。此时身体要坐正，头向前方，用眼睛余光观察，当左后视镜与车身夹角的点距离中间 “黄实线” 上沿约 5-8 厘米处时，先踩刹车后踩离合，“双踩死”（此时车前轮基本上压在黄虚线上）。打左转向灯，拉起手刹约 2 两秒后，放下手刹。</p><p>坡道起步：30 秒内车辆要起步，否则会直接挂科。轻抬离合，等车身轻微抖动，当车身抖动幅度较大时，慢松刹车，车辆起步，方向盘向左修 45 度左右，尽快回正。当车辆即将翻坡时再略抬一点离合，越过平台下冲时，将离合踩到底，轻踩刹车，保持匀速缓慢下坡。</p>]]></content>
      
      
      <categories>
          
          <category> 考证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 驾考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>驾考科目二要点(已过)</title>
      <link href="/2020/05/31/%E9%A9%BE%E8%80%83%E7%A7%91%E7%9B%AE%E4%BA%8C%E8%A6%81%E7%82%B9/"/>
      <url>/2020/05/31/%E9%A9%BE%E8%80%83%E7%A7%91%E7%9B%AE%E4%BA%8C%E8%A6%81%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p>原来二月份要考的科目二，好久没练车，忘得一干二净……别躺了，6月份开始继续练车。</p><a id="more"></a><p><a href=""><img src="https://s1.ax1x.com/2020/06/01/t8QdUK.md.jpg" alt="t8QdUK.md.jpg"></a></p><h1 id="考前准备："><a href="#考前准备：" class="headerlink" title="考前准备："></a>考前准备：</h1><ol><li>调整座椅，离合器踩到底</li><li>后视镜调整：左边能看到后轮（后视镜1/3） 右边压在后门把手 看到</li><li>安全带系好，确保不会弹出</li><li>检查仪表板</li><li><span class='p green'>拉手刹测试</span></li></ol><h1 id="倒车入库："><a href="#倒车入库：" class="headerlink" title="倒车入库："></a>倒车入库：</h1><ol><li>保持1.5米边距的方法：<span class='p blue'>左后视镜下沿一半的位置贴着线</span></li></ol><h1 id="曲线行驶："><a href="#曲线行驶：" class="headerlink" title="曲线行驶："></a>曲线行驶：</h1><ol><li><span class='p red'>打一圈</span>方向，左车角碰线回正，到右边角再打一圈方向，要出口时候<span class='p red'>稍微往左边回一些方向</span>。</li></ol><h1 id="侧方位停车："><a href="#侧方位停车：" class="headerlink" title="侧方位停车："></a>侧方位停车：</h1><ol><li>出库时候 先打左灯 车头一般盖线一般后回正，慢慢打一圈。</li><li>右边1/3盖到线大概是<span class='p yellow'>30公分！</span></li></ol><h1 id="直角转弯："><a href="#直角转弯：" class="headerlink" title="直角转弯："></a>直角转弯：</h1><ol><li>左侧雨刮器最高点贴右边线行驶 30公分 左门把手对齐直角。</li></ol><h1 id="坡道定点起步："><a href="#坡道定点起步：" class="headerlink" title="坡道定点起步："></a>坡道定点起步：</h1><ol><li>顶点记得挂空挡。</li><li>左后视镜下沿要对齐第二根实线。</li></ol><hr><div class="note "><p>大一暑假练车计划：</p></div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>六月一日开始练车。</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>暑假至少考完科目二，练熟科目三。</p>            </div><div class='checkbox plus red checked'><input type="checkbox" checked="checked"/>            <p>变黑警告</p>            </div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         echo <span class="string">"这是一个日后生活的基本技能"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fun();</span><br></pre></td></tr></table></figure><h4 id="六月一日："><a href="#六月一日：" class="headerlink" title="六月一日："></a>六月一日：</h4><p>​    今天刚去第一天，预约10号考试，简单练了一下全程，<span class='p red'>坡道定点和曲线行驶点位看不见</span>。这天气是真热！</p><p><a href="https://imgchr.com/i/t8QvPU" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/06/01/t8QvPU.md.jpg" alt="t8QvPU.md.jpg"></a></p>]]></content>
      
      
      <categories>
          
          <category> 考证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 驾考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+hexo博客搭建</title>
      <link href="/2020/05/31/Github-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/05/31/Github-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>hexo静态博客搭建</p><a id="more"></a><p>耗费一晚上加一天时间算是搭建好了hexo博客，过程中也遇到很多问题。<br>好在有CSDN的大佬们的文章帮忙。希望能够持续更新博客哦！</p><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1590925784787&di=98a3f4f5db31305086a77e55a80583f2&imgtype=0&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fq_70%2Cc_zoom%2Cw_640%2Fimages%2F20190208%2Fca63616f00fa419bbd79ef032cd07dfe.jpeg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> hexo博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
